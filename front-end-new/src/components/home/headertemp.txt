import React, { useContext, useEffect, useMemo } from 'react'
import AppBar from '@material-ui/core/AppBar'
import Toolbar from '@material-ui/core/Toolbar'
import IconButton from '@material-ui/core/IconButton'
import Typography from '@material-ui/core/Typography'
import { makeStyles } from '@material-ui/core/styles'
import { useHistory } from 'react-router-dom'
import AppContext from '../../context/app-context'
import Account from '../../components/home/Account'
import { LinearProgress } from '@material-ui/core'
import { progressBar } from '../../mylib/supports/jsxStyle'
import PopoverMenus from '../panel/PopoverMenus'
import Search from './Search'
import { GENRES } from '../../mylib/constant/constStr'
import '../../mylib/supports/CSSClass.css'
const useStyles = makeStyles((theme) => ({
  offset: theme.mixins.toolbar,
  root: {
    marginTop: '100px',
  },
  appBar: {
    boxShadow: '1px 1px 1px #d60446',
  },
  menuButton: {
    marginRight: theme.spacing(2),
  },
  toolbar: {
    minHeight: 100,
    width: '80%',
    marginLeft: '131px',
    justifyContent: 'space-between'
  },
  title: {
    flex: 'left',
    fontSize: '18px',
    fontWeight: 'bold',
    marginLeft: '50px'
  },
  search: {
    flex: 'right'
    // position: 'relative',
    // borderRadius: theme.shape.borderRadius,
    // backgroundColor: fade(theme.palette.common.white, 0.15),
    // '&:hover': {
    //   backgroundColor: fade(theme.palette.common.white, 0.25),
    // },
    // marginLeft: 0,
    // marginTop: '7px',
    // width: '100%',
    // [theme.breakpoints.up('sm')]: {
    //   marginLeft: theme.spacing(1),
    //   width: 'auto',
    // },
    // cursor: 'pointer',
  },
  searchIcon: {
    padding: theme.spacing(0, 2),
    height: '100%',
    position: 'absolute',
    pointerEvents: 'none',
    display: 'flex',
    alignItems: 'center',
    justifyContent: 'center',

  },
  inputRoot: {
    color: 'inherit',
  },
  large: {
    width: theme.spacing(7),
    height: theme.spacing(7),
    paddingTop: '20px'
  },
  wrapLogo: {
    height: '100px',
    marginLeft: "auto",
    marginRight: "auto"
  },
  logo: {
    width: '75%',
    float: "left"
  },
  brandName: {
    width: '25%',
    float: "left"
  },
  inputInput: {
    padding: theme.spacing(1, 1, 1, 0),
    // vertical padding + font size from searchIcon
    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,
    transition: theme.transitions.create('width'),
    width: '100%',
    [theme.breakpoints.up('sm')]: {
      width: '20ch',
      '&:focus': {
        width: '20ch',
      },
    },
  },
}));
const Child = React.memo(({ darkMode, genres }) => {
  const classes = useStyles()
  const history = useHistory()
  useEffect(() => {
    window.addEventListener('sc', () => {
      console.log('sssss')
      document.getElementById('appbar').style.marginTop = 0
    })
  }, [])


  return (

    <div className={classes.root}>

      <AppBar color="inherit" className={classes.appBar} id='appbar'>
        <LinearProgress color='secondary' style={{ ...progressBar }} id="progress" />
        <Toolbar className={classes.toolbar}>
          <div style={{ display: 'flex' }}>
            <div style={{ width: '100px', height: '80px', marginTop: '3%' }}>
              <img
                style={{ maxWidth: '100%', maxHeight: '100%' }}
                src={'/images/logo.png'} alt='logo'
                onClick={() => history.push('/')}
              />
            </div>
            {/* <div className="clearfix" /> */}
            <div>
              <div style={{ display: 'flex', marginTop: '20px', marginLeft: '100%' }}>
                <div className={classes.search} >
                  <Search />
                </div>
                <IconButton aria-label="display more actions" edge="end" color="inherit" style={{ flex: 'right' }}>
                  <Account />
                </IconButton>
              </div>
              <div style={{ display: 'flex' }}>
                <Typography className={classes.title + ' ' + 'menu'} noWrap onClick={() => history.push('/')}>
                  HOME PAGE
                </Typography>


                <Typography className={classes.title} noWrap>
                  CHARTS
                </Typography>


                <Typography className={classes.title} noWrap>
                  NEWS
                </Typography>


                <Typography className={classes.title} noWrap>
                  ALBUMS
                </Typography>

                <div id='GENRES' className={classes.title}>
                  <PopoverMenus title='GENRES' lists={genres} />
                </div>
              </div>
            </div>
          </div>
        </Toolbar>
      </AppBar>
    </div>

  );
})
export default function ProminentAppBar() {
  const { homePage: { darkMode } } = useContext(AppContext)
  const genres = useMemo(() => {
    return GENRES.map(genre => {
      return { content: genre, link: `/search/${genre}` }
    })
  }, [])
  return (
    <Child darkMode={darkMode} genres={genres} />
  )
}
